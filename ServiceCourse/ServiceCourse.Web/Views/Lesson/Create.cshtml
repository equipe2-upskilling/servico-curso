@model ServiceCourse.Web.Models.LessonViewModel
@{
    ViewBag.Title = "Create";
}


<div class="form-horizontal">
    <form id="createForm">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CourseId)
        <div class="form-group row">
            <div class="col-sm-6 mb-3 mb-sm-0">
                <label for="Name">Nome</label>
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control form-control-user", @placeholder = "Nome" } })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-sm-6 mb-3 mb-sm-0">
                <label for="Name">Descrição</label>
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control form-control-user", @placeholder = "Descrição" } })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-sm-6 mb-3 mb-sm-0">
                <label for="Name">Link da aula</label>
                @Html.EditorFor(model => model.LessonUrl, new { htmlAttributes = new { @class = "form-control form-control-user", @placeholder = "Link da aula" } })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-sm-6 mb-3 mb-sm-0">
                <label for="Name">Imagem</label>
                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control form-control-user", @placeholder = "Imagem" } })
            </div>
        </div>
        <div class="form-group">
            <button type="submit" value="Create" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm" id="btnSubmit">
                <i class="fas fa-download fa-sm text-white-50"></i>
                Salvar
            </button>
        </div>
    </form>

</div>

<div>
    @Html.ActionLink("Voltar", "Index", new {Id = @ViewBag.CourseId })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>
        function createLesson() {
          $('#createForm').submit(function(e) {
              e.preventDefault();

              debugger;
              var courseId = @ViewBag.CourseId;

              if (validateForm()) {
                  var formData =
                  {
                      Name: $('#Name').val(),
                      CourseId: @ViewBag.CourseId,
                      Description: $('#Description').val(),
                      LessonUrl: $('#LessonUrl').val(),
                      Image: $('#Image').val()
                  };

                  var jsonData = JSON.stringify(formData);

              $.ajax({
                type: 'POST',
                url:'@Url.Action("Create", "Lesson")',
                  data: jsonData,
                  contentType: 'application/json',
                  success: function (result) {
                      if (result.success) {
                          window.location.href = '/Lesson/Index/' + courseId;
                      }
                },
                error: function(xhr, status, error) {
                    alert('Ocorreu um erro ao criar o registro: ' + result.errorMessage);
                }
              });
            }
          });
    };

    function isValidNumber(value) {
        return !isNaN(parseFloat(value)) && isFinite(value);
    }

        function validateForm() {
            var isValid = true;
            var requiredFields = ['Name', 'Description', 'LessonUrl'];

            for (var i = 0; i < requiredFields.length; i++) {
                var fieldName = requiredFields[i];
                var fieldValue = $.trim($('#' + fieldName).val());

                if (fieldValue === '') {
                    $('#' + fieldName).addClass('border-danger');
                    isValid = false;
                } else {
                    $('#' + fieldName).removeClass('border-danger');
                }
            }

            if (!isValid) {
                alert('Por favor, preencha todos os campos obrigatórios.');
            }

            return isValid;
        };

    $(document).ready(function () {
        createLesson();
    });


</script>
}
